#lang racket
#| I detta dokument ska vi skriva alla klassdef. för karaktärerna |#
(provide characters%)

;;Hjälpprocedur member?
(define (member? n lst)
  (not (equal? (member n lst) #f))) ;;TESTA! 

(define characters%
  (class object%
    (init-field
     [place #f] 
     [name "please select a name for your character"]
     [description "A random stranger"]
     [talk-line "Hello, there!"] 
     [pick-things-up "default value"]
     [feeling "default value"]
     [take-steps "default value"]
     [handle-input
      (lambda (this-ui user-command user-arguments)
        (present (string-append "player wants to" user-command (string-join user-arguments))))]
     [items-in-possession '()])

    ;;selektorer
     (define/public (get-name)
       name)

     (define/public (get-description)
       description)

     (define/public (get-place)
       place)

     (define/public (get-talk-line)
       talk-line)

     (define/public (move-to new-place)
       (set! place new-place)) ;;TESTA!!

     (define/public (get-inventory)
       items-in-possession)

     (define/public (add-inventory item)
       (set! items-in-possession (cons items-in-possession item))) ;;TESTA! 

     (define/public (get-item item-name)
       (if (member? item-name items-in-possession)
           item-name
           #f)) ;;TESTA! 

    (define/private (recieve item giver)
      (add-inventory item)) ;;TESTA! SKA DETTA VARA PRIVATE?      
      
    (define/private (give item-name recipient) 
      (if (member? item-name items-in-possession);TESTA; SKA DETTA VARA PRIVATE?  
          (set! items-in-possession (remove item-name items-in-possession));;items tas bort fr. inventory. 
          (present "item not in possession, therefore not possible to give")))

    
  ;;methods
   (define/public (present entered-line)      
      (let
          ([message-with-line-feed (string-append entered-line "\n")])
        (send this present-no-lf message-with-line-feed)))

   (define/public (present-no-lf entered-string)        
      (send output-field set-value
            (string-append
             (send output-field get-value)           
             entered-string))
      (scroll-to-bottom))
   
;; slänga saker, 
   ;;give  
   ;;selectors
      
     )) 

;;(define %main-character 
;;;ska kunna slänga saker! 
